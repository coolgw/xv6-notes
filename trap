stvec: 存储trap handler， tvec= trap vec?  发生trap时，把pc = stvec
sepc: 当trap发生时，把pc存在这里， 终端返回sret把pc=sepc
scause: trap reason
sscratch: 进入trap前保存user模式的一些状态的地址，代码里面就是trapframe
sstatus:  SIE 中断控制  SPP:发生trap前在那个模式
satp:页表root物理地址
stval:保存page-fault 


uservec是哪里设置的？

userinit-->allocproc
    p->context.ra = (uint64)forkret; //这个设置会让这个process switch的ra变成forkret
//ra 寄存器存的是ret的返回地址，也就是ret要跳转的地方
//这样在switch函数内
.globl swtch
swtch:
...
        ld s9, 88(a1)
        ld s10, 96(a1)
        ld s11, 104(a1)

        ret  //这里就直接开始往ra地方跳转，也就是从scheduler-->p 的时候先跳到forkret,这样到user mode后uservec就被设置了
        //一旦user mode发生了trap,就会选择uservec来进行下一步动作

 
// A fork child's very first scheduling by scheduler()
// will swtch to forkret.
forkret
   usertrapret(void)
   {
      // send syscalls, interrupts, and exceptions to trampoline.S
      w_stvec(TRAMPOLINE + (uservec - trampoline));  这里设置了uservec给trap register




gdb debug with si ni will go through asm line by line
layout asm will open UI window, ctl+x and ctl+a will open/close UI.

